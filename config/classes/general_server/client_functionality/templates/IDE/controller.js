<javascript:code xmlns:repository="http://general_server.org/xmlnamespaces/repository/2006" xmlns="http://general_server.org/xmlnamespaces/javascript/2006">
  <javascript:object>
    <javascript:static-property name="cExplorer"><![CDATA[' > .Class__Explorer:first']]></javascript:static-property>
    <javascript:static-property name="cTreeFrame"><![CDATA[IDE.cExplorer + ' > .gs-name-verticalframeset-main > .gs-name-frame-tree']]></javascript:static-property>
    <javascript:static-property name="cSearchForm"><![CDATA[IDE.cTreeFrame + ' > .Class__XSchema:first']]></javascript:static-property>
    <javascript:static-property name="cTree"><![CDATA[IDE.cTreeFrame + ' > .Class__Collection:first']]></javascript:static-property>
  
    <javascript:method name="displayAdded_default" parameters="j1DisplayObject" chain="true"><![CDATA[
      //search type will automatically switch according to content
      //a CHANGE event may still trigger on blur of the INPUT
      //we allow that until the user has pressed a specific submit button
      j1DisplayObject.o.automaticFormatSelection = true;
      
      this.showTechnology(j1DisplayObject);
    ]]></javascript:method>

    <javascript:method name="showTechnology" is-protected="true" parameters="j1DisplayObject"><![CDATA[
      var self      = this;
      var jNextTech;
      j1DisplayObject.o.iTechn = ((j1DisplayObject.o.iTechn === undefined) ? 0 : j1DisplayObject.o.iTechn + 1);
      jNextTech = j1DisplayObject.find("#technologies:first > li").eq(j1DisplayObject.o.iTechn);
      if (jNextTech.length) jNextTech.fadeIn("slow", this.privateCallback(function(j1DisplayObject){
        this.showTechnology(j1DisplayObject);
      }, j1DisplayObject));
    ]]></javascript:method>

    <javascript:method name="reload_css"><![CDATA[
      //override: clearing ALL dependencies for all classes
      var self          = this;
      var sDependency   = ".Class__CSSDependency";
      var sAttribute    = "href";
      var jDependencies = new JOO(sDependency);

      if (!jDependencies.length) Debug.warn(this, "no [" + sDependency + "] found");

      jDependencies.each(function(){
        var jDependency = new JOO(this);
        var sNewHREF    = jDependency.attr(sAttribute).setUrlParameter("random", Math.random());

        jDependency.attr(sAttribute, sNewHREF);
      });


      return jDependencies.length;
    ]]></javascript:method>

    <javascript:method name="reload_javascript"><![CDATA[
      //override: clearing ALL dependencies for all classes
      var self          = this;
      var sDependency   = ".Class__JavaScriptDependency";
      var sAttribute    = "src";
      var jDependencies = new JOO(sDependency);

      if (!jDependencies.length) Debug.warn(this, "no [" + sDependency + "] found");

      jDependencies.each(function(){
        var jDependency = new JOO(this);
        var sNewHREF    = jDependency.attr(sAttribute).setUrlParameter("random", Math.random());

        jDependency.attr(sAttribute, sNewHREF);
      });


      return jDependencies.length;
    ]]></javascript:method>

    <!-- ######################################## events ######################################## -->
    <javascript:event-handler event="click" action="selectchild" parameters="j1DisplayObject"><![CDATA[
      //TODO: we want to open this in the *same* tab
      if (Event.currentEvent().targetObject()) this.showInArea(j1DisplayObject, Event.currentEvent().targetObject());
    ]]></javascript:event-handler>

    <javascript:event-handler event="click" action="saveXML"><![CDATA[
      //generated by the MultiDocument > MultiView > CodeMirror
      //TODO: initial display should probably be in the eEvent? is it RARE?
      var jMultiView       = new JOO(Event.currentEvent().target).closest(MultiView);
      var jXMLView         = jMultiView.find(".view-xml-editor-container");
      var jXSchemaDO       = jXMLView.children(XSchema);
      if (jXSchemaDO.length) jXSchemaDO.submit();
      else                   Debug.error(this, "schema not found");
      return false;
    ]]></javascript:event-handler>

    <javascript:event-handler event="click" action="formatXML"><![CDATA[
      var jMultiView        = new JOO(Event.currentEvent().target).closest(MultiView);
      var jXMLView          = jMultiView.find(".view-xml-editor-container");
      var jCodeMirror       = jXMLView.find(CodeMirrorEditor);
      if (jCodeMirror.length) jCodeMirror.formatContent();
      else                    Debug.error(this, "CodeMirrorEditor not found");
      return false;
    ]]></javascript:event-handler>

    <javascript:event-handler event="select" selector=".gs-name-collection-ide-main-tree" parameters="j1DisplayObject"><![CDATA[
      //#IDE-main-tree select -> window details
      //Event.currentEvent().originalDisplayObject carries the selected object
      //loading the named tab panel "node-detail"
      j1DisplayObject.find(IDE.cExplorer).setContents("node-details");
    ]]></javascript:event-handler>

    <javascript:event-handler event="error" parameters="j1DisplayObject, oError"><![CDATA[
      //TODO: error -> window details
      if (oError && oError.xpathToNode) j1DisplayObject.find(IDE.cExplorer).setContents(
        "~IDE/repository:interfaces/multiview",
        {
          xpathToNode: oError.xpathToNode
        }
      );
      else alert("error happened but not sure what!");
    ]]></javascript:event-handler>

    <javascript:event-handler event="tabsadd" parameters="j1DisplayObject, oMDI"><![CDATA[
      var jWelcomeTabLI = oMDI.tabFromID("tab-welcome");
      if (jWelcomeTabLI.length) oMDI.deleteTab(j1DisplayObject, jWelcomeTabLI);
    ]]></javascript:event-handler>

    <javascript:event-handler event="click" action="new" parameters="j1DisplayObject, sType"><![CDATA[
      j1DisplayObject.find(IDE.cExplorer).setContents("node-add");
    ]]></javascript:event-handler>

    <javascript:event-handler event="click" action="ajaxReloadCSS" parameters="j1DisplayObject, [bDebug = false]"><![CDATA[
      this.reload_css();
      return false;
    ]]></javascript:event-handler>

    <javascript:event-handler event="click" action="ajaxReloadJavaScript" parameters="j1DisplayObject, [bDebug = false]"><![CDATA[
      this.reload_javascript();
      return false;
    ]]></javascript:event-handler>

    <!-- ######################################## search events and methods ######################################## -->
    <javascript:event-handler event="mousedown" selector="#gs-submit-options &gt; .gs-form-submit" parameters="j1DisplayObject"><![CDATA[
      //we use a mousedown event
      //because the return key form submission will generate a false click event on the first submit button
      //submit system however will prevent-default and use the .gs-selected
      var jSearchForm     = j1DisplayObject.find(IDE.cSearchForm);
      var jSubmitOptions  = jSearchForm.find("#gs-submit-options");
      var jSubmit         = new JOO(Event.currentEvent().target);
      jSubmitOptions.find("input").removeClass("gs-selected"); //.attr("disabled", "1");
      jSubmit.addClass("gs-selected"); //.removeAttr("disabled");
      
      //search type will not automatically switch according to content anymore
      //a CHANGE event may still trigger on blur of the INPUT
      j1DisplayObject.o.automaticFormatSelection = false;
    ]]></javascript:event-handler>

    <javascript:event-handler event="keyup" action="searchchange"/>
    <javascript:event-handler event="change" action="searchchange"/>
    <javascript:event-handler event="mouseup" action="searchchange"/>
    <javascript:event-handler event="input" action="searchchange"/>
    <javascript:event-handler event="paste" action="searchchange"/>

    <javascript:method name="searchchange" is-protected="true" parameters="j1DisplayObject"><![CDATA[
      //layout
      var jSearchForm     = j1DisplayObject.find(IDE.cSearchForm);
      var jSearchOptions  = jSearchForm.find(".gs-search-option");
      var jSearchInput    = jSearchForm.find(".gs-form-elements .gs-phrase input");
      var jSubmitOptions  = jSearchForm.find("#gs-submit-options");
      var sInput          = jSearchInput.val().trim();
      var jSubmit, jCurrent;

      //TODO: temporary search bug fix whilst figuring it out!!!
      if (sInput == "") jSearchOptions.slideUp("slow");
      else {
        jSearchOptions.slideDown("fast");
          
        //if the user has pressed a form submit option
        //then do not continue to change things automatically
        if (j1DisplayObject.o.automaticFormatSelection) {
          //----------------------------------------- auto format select
          fFunc = window[sInput];
          if      (sInput.match(/^\/.+|[a-zA-Z0-9]:[a-zA-Z]|^id\(|database:.+/))    jSubmit = jSubmitOptions.find("#gs-submit-xpath:first");
          else if (sInput.match(/^idx_.+|^Class__.+|^usr_/))        jSubmit = jSubmitOptions.find("#gs-submit-xmlid:first");
          else if (fFunc instanceof Function && fFunc.definedClass) jSubmit = jSubmitOptions.find("#gs-submit-class:first");
          else                                                      jSubmit = jSubmitOptions.find("#gs-submit-text:first");

          //----------------------------------------- mark as selected for the submission
          if (jSubmit) {
            jCurrent = jSubmitOptions.find(".gs-selected");
            if (!jCurrent.same(jSubmit)) {
              //dont disable the other ones because we might want a different type of search
              jCurrent.removeClass("gs-selected"); //.attr("disabled", "1");
              jSubmit.addClass("gs-selected"); //.removeAttr("disabled");
            }
          }
        }
      }

      return false;
    ]]></javascript:method>

    <javascript:event-handler event="submit" action="search" prevent-default="true" parameters="j1DisplayObject, s1Phrase, ..."><![CDATA[
      //the submitClick() will ensure that the pressed button will set gs-selected also
      var oDatabaseElement;
      var bRegex  = false; //implement later
      //layout
      var jExplorer       = j1DisplayObject.find(IDE.cExplorer);
      var jTreeFrame      = j1DisplayObject.find(IDE.cTreeFrame);
      var jSearchForm     = j1DisplayObject.find(IDE.cSearchForm);
      var jSearchOptions  = jSearchForm.find(".gs-search-option");
      var jSubmitOptions  = jSearchForm.find("#gs-submit-options");
      var jSubmit         = jSubmitOptions.find(".gs-selected");

      //----------------------------------------- action
      if (jSubmit.same(jSubmitOptions.children("#gs-submit-text"))) {
        //TODO: regex search
        jExplorer.setContents("search-text", {phrase:s1Phrase, regex:bRegex}, "searching...");
      }

      else if (jSubmit.same(jSubmitOptions.children("#gs-submit-xpath"))) {
        jExplorer.setContents("search-xpath", {xpath:s1Phrase, regex:bRegex}, "searching...");
      }

      else if (jSubmit.same(jSubmitOptions.children("#gs-submit-class"))) {
        //show in tree only, s1Phrase = xml:id
        oDatabaseElement = DatabaseElement.createAbstract("Class__" + s1Phrase);
        this.showInArea(oDatabaseElement, jTreeFrame.children(Collection));
      }

      else if (jSubmit.same(jSubmitOptions.children("#gs-submit-xmlid"))) {
        //show in tree only, s1Phrase = xml:id
        oDatabaseElement = DatabaseElement.createAbstract(s1Phrase);
        this.showInArea(oDatabaseElement, jTreeFrame.children(Collection));
      }

      //----------------------------------------- reset
      jSearchOptions.slideUp("fast");
      j1DisplayObject.o.automaticFormatSelection = true;
      
      return false;
    ]]></javascript:event-handler>

    <javascript:method name="showInArea" parameters="oDatabaseElement, j1TargetArea"><![CDATA[
      //NO: expanding each node one after the other: time consuming
      //TODO: ancestorsOrSelf() => hardlink-policy needs to be set for this
      var self = this;
      var eOriginalEvent = Event.currentEvent();
      
      //TODO: this should be an AJAXHTMLLoader...
      j1TargetArea.addClass("gs-ajax-loading");
      Database.ancestorPath(
        oDatabaseElement, 
        "children-IDETreeRecord", 
        this.privateCallback(this.showInAreaAncestors, j1TargetArea)
      );
    ]]></javascript:method>

    <javascript:method name="showInAreaAncestors" is-protected="true" parameters="j1TargetArea, jqDataChildren, [oResponseDOM, sStatus]"><![CDATA[
      //look for the first node not present in the tree
      //TODO: need canolicalise this stylesheet cache
      var self = this;
      var sXmlID, sStylesheetHREF;                 //strings
      //jQuery source document pointers
      var jqDataNode, jqTopNode, jqNewAJAXNode, jqLastFoundAJAXNode, jqAJAXDataChildrenToAppend;     
      //JOO attached target document pointers
      var oDatabaseElement, jDisplaysInTargetArea, j1TargetAreaElement, bNewNodeHasDisplayInTargetArea; 

      //input jQuery document
      jqDataNode      = jqDataChildren.parent();   //<gs:data>
      jqTopNode       = jqDataChildren.first();

      if (sStylesheetHREF = HTMLWebpage.stylesheetHREF()) {
        //recurse down the children looking for one that is not present on the client
        //note that some, necessary data, might not be a DatabaseElement and therefore not be detectable
        //<interface:Collection><object:Server>
        bNewNodeHasDisplayInTargetArea = true;
        for (jqNewAJAXNode = jqDataChildren.firstChild(); bNewNodeHasDisplayInTargetArea && jqNewAJAXNode.length; jqNewAJAXNode = jqNewAJAXNode.firstChild().firstChild()) {
          //analyse DatabaseElements only
          if (sXmlID = jqNewAJAXNode.xmlXPathToNode()) {
            //look for this DatabaseElement on the client
            //if we cannot find it then we can place it in the tree
            //we only want the object if it has a display (jElement) in the actual tree
            if (oDatabaseElement = OO.fromIDX(sXmlID)) {
              jDisplaysInTargetArea          = oDatabaseElement.myDisplaysObjectsIn(j1TargetArea);
              bNewNodeHasDisplayInTargetArea = (jDisplaysInTargetArea.length !== 0);
            } else bNewNodeHasDisplayInTargetArea = false;

            //record our last valid existing client DatabaseElement
            //because that has the children UL where we will attach to
            if (bNewNodeHasDisplayInTargetArea) {
              //TODO: deal with no xml:id data by recording the last valid DatabaseElement with no descendant DatabaseElements
              jqLastFoundAJAXNode = jqNewAJAXNode;
              j1TargetAreaElement = jDisplaysInTargetArea.eq(0);
            } //else allow the loop to exit with !bNewNodeHasDisplayInTargetArea
          }
        }

        if (!bNewNodeHasDisplayInTargetArea) {
          //the above loop exited because a jNewAJAXNode/@xml:id was NOT FOUND on the client browser (in the tree)
          if (j1TargetAreaElement) {
            //and a previous valid DatabaseElement from the AJAX doc
            //WAS found in the client browser OO.fromIDX()
            //move the jqLastFoundAJAXNode up the top node in the AJAX doc (jqDataNode)
            //and get rid of the unwanted tree above
            //TODO: removing an element from a live NodeList here
            //TODO: NONE of this is multiple node return compatable!
            jqAJAXDataChildrenToAppend = jqLastFoundAJAXNode.children();
            //copy @*:attributes from top level
            jqAJAXDataChildrenToAppend.attributes(jqTopNode.attributes(GS.NAMESPACE));
            jqAJAXDataChildrenToAppend.attributes(jqTopNode.attributes(Meta.NAMESPACE));
            jqAJAXDataChildrenToAppend.attributes(jqTopNode.attributes(Database.NAMESPACE));
            jqDataNode.append(jqAJAXDataChildrenToAppend); //this is a MOVE
            jqDataChildren.remove();

            //transform like normal ;)
            //transformWithHREF(...) also accepts jQuery
            if (jqDataNode.children().length) {
              HTMLWebpage.transformWithHREF(oResponseDOM, sStylesheetHREF, function(oHTMLDoc){
                j1TargetAreaElement.children().mergeNodes(new jQuery(oHTMLDoc).children());
              });
            } else Debug.warn(self, "no children data nodes to append");
          } else Debug.error(self, "no DatabaseElements present. Maybe starting from an + abstract object like a Database?");
        }
      } else Debug.error(self, "failed to get Webpage stylesheet");
                 
      j1TargetArea.finishedLoading();
    ]]></javascript:method>

    <javascript:event-handler event="click" action="selectsearchresult" parameters="j1DisplayObject"><![CDATA[
      if (Event.currentEvent().targetObject()) this.showInArea(j1DisplayObject, Event.currentEvent().targetObject());
    ]]></javascript:event-handler>
  </javascript:object>
</javascript:code>